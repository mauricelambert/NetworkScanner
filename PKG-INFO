Metadata-Version: 2.1
Name: NetworkScanner
Version: 0.0.3
Summary: This package implement a NetworkScanner.
Home-page: https://github.com/mauricelambert/NetworkScanner
Author: Maurice Lambert
Author-email: mauricelambert434@gmail.com
License: UNKNOWN
Description: # NetworkScanner
        
        ## Description
        This package implement a asynchronous network scanner.
        
        ## Requirements
        This package require : 
         - python3
         - python3 Standard Library
        
        ## Installation
        ```bash
        pip install NetworkScanner 
        ```
        
        ## Examples
        
        ### Command lines
        
        ```bash
        NetworkScan -n 192.168.56.0/24 # Scan all ip in network 192.168.56.0/24
        NetworkScan -f 192.168.0.1 -l 192.168.0.50 # Scan ip between 192.168.0.1 and 192.168.0.50
        NetworkScan -p 80,443 -P -A -H -R -n 192.168.0.0/24 # Scan all ip in network without ping, arp cache and hostname. This scan check ports 80 and 443 on TCP if one port is opened, host is up. 
        ```
        
        ### Python3
        
        ```python
        from NetworkScanner import NetworkScanner
        from asyncio import run
        
        scanner = NetworkScanner(
        	NetworkScanner.get_targets("127.0.0.1", "127.0.0.10")
        )
        run(scanner.scan())
        ```
        
        ```python
        from NetworkScanner import NetworkScanner
        from asyncio import run
        
        scanner = NetworkScanner(
        	NetworkScanner.get_targets_from_network("127.0.0.0/24"),
        	ping=True,
        	ports=[80,443],
        	arp=True,
        	hostname=True,
        	real_time=False,
        	timeout=3)
        run(scanner.scan())
        print(scanner.hosts_up)
        ```
        
        ```python
        from NetworkScanner import NetworkScanner
        from asyncio import run
        
        class CustomNetworkScanner (NetworkScanner):
            def handle_ip (self, ip):
                print(f"This host: {ip} is up !")
        
        scanner = CustomNetworkScanner(
        	NetworkScanner.get_targets("127.0.0.1", "127.0.0.10")
        )
        run(scanner.scan())
        ```
        
        ## Link
        [Github Page](https://github.com/mauricelambert/NetworkScanner)
        
        ## Licence
        Licensed under the [GPL, version 3](https://www.gnu.org/licenses/).
        
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
Description-Content-Type: text/markdown
